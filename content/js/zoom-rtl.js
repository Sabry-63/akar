$(document).ready(function(){$(".xzoom, .xzoom-gallery").xzoom({lens:"#efa845",Xoffset:-15,position:"left"}),"ontouchstart"in window?($(".xzoom, .xzoom2, .xzoom3, .xzoom4, .xzoom5").each(function(){$(this).data("xzoom").eventunbind()}),$(".xzoom, .xzoom2, .xzoom3").each(function(){var o=$(this).data("xzoom");$(this).hammer().on("tap",function(e){e.pageX=e.gesture.center.pageX,e.pageY=e.gesture.center.pageY;o.eventmove=function(e){e.hammer().on("drag",function(e){e.pageX=e.gesture.center.pageX,e.pageY=e.gesture.center.pageY,o.movezoom(e),e.gesture.preventDefault()})},o.eventleave=function(e){e.hammer().on("tap",function(e){o.closezoom()})},o.openzoom(e)})}),$(".xzoom4").each(function(){var a=$(this).data("xzoom");$(this).hammer().on("tap",function(o){o.pageX=o.gesture.center.pageX,o.pageY=o.gesture.center.pageY;a.eventmove=function(e){e.hammer().on("drag",function(e){e.pageX=e.gesture.center.pageX,e.pageY=e.gesture.center.pageY,a.movezoom(e),e.gesture.preventDefault()})};var n=0;function t(){2==n?(a.closezoom(),$.fancybox.open(a.gallery().cgallery)):a.closezoom(),n=0}a.eventclick=function(e){e.hammer().on("tap",function(){1==++n&&setTimeout(t,300),o.gesture.preventDefault()})},a.openzoom(o)})}),$(".xzoom5").each(function(){var a=$(this).data("xzoom");$(this).hammer().on("tap",function(o){o.pageX=o.gesture.center.pageX,o.pageY=o.gesture.center.pageY;a.eventmove=function(e){e.hammer().on("drag",function(e){e.pageX=e.gesture.center.pageX,e.pageY=e.gesture.center.pageY,a.movezoom(e),e.gesture.preventDefault()})};var t=0;function n(){if(2==t){a.closezoom();var e,o=a.gallery().cgallery,n=new Array;for(e in o)n[e]={src:o[e]};$.magnificPopup.open({items:n,type:"image",gallery:{enabled:!0}})}else a.closezoom();t=0}a.eventclick=function(e){e.hammer().on("tap",function(){1==++t&&setTimeout(n,300),o.gesture.preventDefault()})},a.openzoom(o)})})):($("#xzoom-fancy").bind("click",function(e){var o=$(this).data("xzoom");o.closezoom(),$.fancybox.open(o.gallery().cgallery,{padding:0,helpers:{overlay:{locked:!1}}}),e.preventDefault()}),$("#xzoom-magnific").bind("click",function(e){var o=$(this).data("xzoom");o.closezoom();var n,t=o.gallery().cgallery,a=new Array;for(n in t)a[n]={src:t[n]};$.magnificPopup.open({items:a,type:"image",gallery:{enabled:!0}}),e.preventDefault()}))});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
